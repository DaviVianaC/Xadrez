/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package xadrez;

import java.applet.Applet;
import java.applet.AudioClip;
import java.net.URL;

/**
 *
 * @author daviv
 */
public class Xadrez extends javax.swing.JFrame {

    /**
     * Creates new form Xadrez
     */
    public Xadrez() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tela = new javax.swing.JLayeredPane();
        menu = new javax.swing.JLayeredPane();
        pvpButton = new javax.swing.JButton();
        pvcButton = new javax.swing.JButton();
        menuImagem = new javax.swing.JLabel();
        interfaceJogo = new javax.swing.JLayeredPane();
        menuPromocao = new javax.swing.JLayeredPane();
        cancelar = new javax.swing.JButton();
        cavalo = new javax.swing.JButton();
        rainha = new javax.swing.JButton();
        bispo = new javax.swing.JButton();
        torre = new javax.swing.JButton();
        pecaBranca1 = new javax.swing.JLabel();
        pecaBranca2 = new javax.swing.JLabel();
        pecaBranca3 = new javax.swing.JLabel();
        pecaBranca4 = new javax.swing.JLabel();
        pecaBranca5 = new javax.swing.JLabel();
        pecaBranca6 = new javax.swing.JLabel();
        pecaBranca7 = new javax.swing.JLabel();
        pecaBranca8 = new javax.swing.JLabel();
        pecaBranca9 = new javax.swing.JLabel();
        pecaBranca10 = new javax.swing.JLabel();
        pecaBranca11 = new javax.swing.JLabel();
        pecaBranca12 = new javax.swing.JLabel();
        pecaBranca13 = new javax.swing.JLabel();
        pecaBranca14 = new javax.swing.JLabel();
        pecaBranca15 = new javax.swing.JLabel();
        pecaBranca16 = new javax.swing.JLabel();
        pecaPreta1 = new javax.swing.JLabel();
        pecaPreta2 = new javax.swing.JLabel();
        pecaPreta3 = new javax.swing.JLabel();
        pecaPreta4 = new javax.swing.JLabel();
        pecaPreta5 = new javax.swing.JLabel();
        pecaPreta6 = new javax.swing.JLabel();
        pecaPreta7 = new javax.swing.JLabel();
        pecaPreta8 = new javax.swing.JLabel();
        pecaPreta9 = new javax.swing.JLabel();
        pecaPreta10 = new javax.swing.JLabel();
        pecaPreta11 = new javax.swing.JLabel();
        pecaPreta12 = new javax.swing.JLabel();
        pecaPreta13 = new javax.swing.JLabel();
        pecaPreta14 = new javax.swing.JLabel();
        pecaPreta15 = new javax.swing.JLabel();
        pecaPreta16 = new javax.swing.JLabel();
        indicadorMovimento1 = new javax.swing.JLabel();
        indicadorMovimento2 = new javax.swing.JLabel();
        indicadorMovimento3 = new javax.swing.JLabel();
        indicadorMovimento4 = new javax.swing.JLabel();
        indicadorMovimento5 = new javax.swing.JLabel();
        indicadorMovimento6 = new javax.swing.JLabel();
        indicadorMovimento7 = new javax.swing.JLabel();
        indicadorMovimento8 = new javax.swing.JLabel();
        indicadorMovimento9 = new javax.swing.JLabel();
        indicadorMovimento10 = new javax.swing.JLabel();
        indicadorMovimento11 = new javax.swing.JLabel();
        indicadorMovimento12 = new javax.swing.JLabel();
        indicadorMovimento13 = new javax.swing.JLabel();
        indicadorMovimento14 = new javax.swing.JLabel();
        indicadorMovimento15 = new javax.swing.JLabel();
        indicadorMovimento16 = new javax.swing.JLabel();
        indicadorMovimento17 = new javax.swing.JLabel();
        indicadorMovimento18 = new javax.swing.JLabel();
        indicadorMovimento19 = new javax.swing.JLabel();
        indicadorMovimento20 = new javax.swing.JLabel();
        indicadorMovimento21 = new javax.swing.JLabel();
        indicadorMovimento22 = new javax.swing.JLabel();
        indicadorMovimento23 = new javax.swing.JLabel();
        indicadorMovimento24 = new javax.swing.JLabel();
        indicadorMovimento25 = new javax.swing.JLabel();
        indicadorMovimento26 = new javax.swing.JLabel();
        indicadorMovimento27 = new javax.swing.JLabel();
        indicadorMovimento28 = new javax.swing.JLabel();
        indicadorMovimento29 = new javax.swing.JLabel();
        indicadorMovimento30 = new javax.swing.JLabel();
        indicadorMovimento31 = new javax.swing.JLabel();
        indicadorMovimento32 = new javax.swing.JLabel();
        indicadorMovimento33 = new javax.swing.JLabel();
        indicadorMovimento34 = new javax.swing.JLabel();
        indicadorMovimento35 = new javax.swing.JLabel();
        indicadorSelecionado = new javax.swing.JLabel();
        texto = new javax.swing.JLabel();
        tabuleiro = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        editar = new javax.swing.JMenu();
        tabuleiros = new javax.swing.JMenu();
        tabuleiroMadeira = new javax.swing.JCheckBoxMenuItem();
        tabuleiroVerdeBranco = new javax.swing.JCheckBoxMenuItem();
        tabuleiroPedra = new javax.swing.JCheckBoxMenuItem();
        pecas = new javax.swing.JMenu();
        pecasPadrao = new javax.swing.JCheckBoxMenuItem();
        pecasLudico = new javax.swing.JCheckBoxMenuItem();
        pecasLudicoII = new javax.swing.JCheckBoxMenuItem();
        pecasVidro = new javax.swing.JCheckBoxMenuItem();
        partida = new javax.swing.JMenu();
        reiniciar = new javax.swing.JMenuItem();
        abandonar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Xadrez");
        setPreferredSize(new java.awt.Dimension(666, 712));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pvpButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pvpButton.setText("Jogador contra Jogador");
        pvpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pvpButtonActionPerformed(evt);
            }
        });
        menu.add(pvpButton);
        pvpButton.setBounds(120, 460, 170, 30);

        pvcButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pvcButton.setText("Jogador contra Computador");
        pvcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pvcButtonActionPerformed(evt);
            }
        });
        menu.add(pvcButton);
        pvcButton.setBounds(330, 460, 190, 30);

        menuImagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/menu/menus.jpg"))); // NOI18N
        menu.add(menuImagem);
        menuImagem.setBounds(0, 0, 650, 650);

        tela.add(menu);
        menu.setBounds(0, 0, 650, 650);

        interfaceJogo.setPreferredSize(new java.awt.Dimension(666, 712));

        cancelar.setText("X");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });
        menuPromocao.add(cancelar);
        cancelar.setBounds(0, 259, 65, 23);

        cavalo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pecasLudicos2/cavaloBranco.png"))); // NOI18N
        cavalo.setAlignmentY(-0.5F);
        cavalo.setBorder(null);
        cavalo.setIconTextGap(0);
        cavalo.setMargin(new java.awt.Insets(0, 0, 0, 0));
        cavalo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        cavalo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cavalo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cavaloActionPerformed(evt);
            }
        });
        menuPromocao.add(cavalo);
        cavalo.setBounds(0, 65, 65, 65);

        rainha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pecasLudicos2/rainhaBranca.png"))); // NOI18N
        rainha.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rainha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rainhaActionPerformed(evt);
            }
        });
        menuPromocao.add(rainha);
        rainha.setBounds(0, 0, 65, 65);

        bispo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pecasLudicos2/bispoBranco.png"))); // NOI18N
        bispo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bispoActionPerformed(evt);
            }
        });
        menuPromocao.add(bispo);
        bispo.setBounds(0, 195, 65, 65);

        torre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pecasLudicos2/torreBranca.png"))); // NOI18N
        torre.setAlignmentY(0.0F);
        torre.setBorder(null);
        torre.setIconTextGap(0);
        torre.setMargin(new java.awt.Insets(0, 0, 0, 0));
        torre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                torreActionPerformed(evt);
            }
        });
        menuPromocao.add(torre);
        torre.setBounds(0, 130, 65, 65);

        interfaceJogo.add(menuPromocao);
        menuPromocao.setBounds(260, 65, 0, 0);
        interfaceJogo.add(pecaBranca1);
        pecaBranca1.setBounds(0, 0, 0, 0);
        interfaceJogo.add(pecaBranca2);
        pecaBranca2.setBounds(0, 0, 0, 0);
        interfaceJogo.add(pecaBranca3);
        pecaBranca3.setBounds(0, 0, 0, 0);
        interfaceJogo.add(pecaBranca4);
        pecaBranca4.setBounds(0, 0, 0, 0);
        interfaceJogo.add(pecaBranca5);
        pecaBranca5.setBounds(0, 0, 0, 0);
        interfaceJogo.add(pecaBranca6);
        pecaBranca6.setBounds(0, 0, 0, 0);
        interfaceJogo.add(pecaBranca7);
        pecaBranca7.setBounds(0, 0, 0, 0);
        interfaceJogo.add(pecaBranca8);
        pecaBranca8.setBounds(0, 0, 0, 0);
        interfaceJogo.add(pecaBranca9);
        pecaBranca9.setBounds(0, 0, 0, 0);
        interfaceJogo.add(pecaBranca10);
        pecaBranca10.setBounds(0, 0, 0, 0);
        interfaceJogo.add(pecaBranca11);
        pecaBranca11.setBounds(0, 0, 0, 0);
        interfaceJogo.add(pecaBranca12);
        pecaBranca12.setBounds(0, 0, 0, 0);
        interfaceJogo.add(pecaBranca13);
        pecaBranca13.setBounds(0, 0, 0, 0);
        interfaceJogo.add(pecaBranca14);
        pecaBranca14.setBounds(0, 0, 0, 0);
        interfaceJogo.add(pecaBranca15);
        pecaBranca15.setBounds(0, 0, 0, 0);
        interfaceJogo.add(pecaBranca16);
        pecaBranca16.setBounds(0, 0, 0, 0);
        interfaceJogo.add(pecaPreta1);
        pecaPreta1.setBounds(610, 0, 0, 0);
        interfaceJogo.add(pecaPreta2);
        pecaPreta2.setBounds(610, 0, 0, 0);
        interfaceJogo.add(pecaPreta3);
        pecaPreta3.setBounds(610, 0, 0, 0);
        interfaceJogo.add(pecaPreta4);
        pecaPreta4.setBounds(610, 0, 0, 0);
        interfaceJogo.add(pecaPreta5);
        pecaPreta5.setBounds(610, 0, 0, 0);
        interfaceJogo.add(pecaPreta6);
        pecaPreta6.setBounds(610, 0, 0, 0);
        interfaceJogo.add(pecaPreta7);
        pecaPreta7.setBounds(610, 0, 0, 0);
        interfaceJogo.add(pecaPreta8);
        pecaPreta8.setBounds(610, 0, 0, 0);
        interfaceJogo.add(pecaPreta9);
        pecaPreta9.setBounds(610, 0, 0, 0);
        interfaceJogo.add(pecaPreta10);
        pecaPreta10.setBounds(610, 0, 0, 0);
        interfaceJogo.add(pecaPreta11);
        pecaPreta11.setBounds(610, 0, 0, 0);
        interfaceJogo.add(pecaPreta12);
        pecaPreta12.setBounds(610, 0, 0, 0);
        interfaceJogo.add(pecaPreta13);
        pecaPreta13.setBounds(610, 0, 0, 0);
        interfaceJogo.add(pecaPreta14);
        pecaPreta14.setBounds(610, 0, 0, 0);
        interfaceJogo.add(pecaPreta15);
        pecaPreta15.setBounds(610, 0, 0, 0);
        interfaceJogo.add(pecaPreta16);
        pecaPreta16.setBounds(610, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento1);
        indicadorMovimento1.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento2);
        indicadorMovimento2.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento3);
        indicadorMovimento3.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento4);
        indicadorMovimento4.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento5);
        indicadorMovimento5.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento6);
        indicadorMovimento6.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento7);
        indicadorMovimento7.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento8);
        indicadorMovimento8.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento9);
        indicadorMovimento9.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento10);
        indicadorMovimento10.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento11);
        indicadorMovimento11.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento12);
        indicadorMovimento12.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento13);
        indicadorMovimento13.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento14);
        indicadorMovimento14.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento15);
        indicadorMovimento15.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento16);
        indicadorMovimento16.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento17);
        indicadorMovimento17.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento18);
        indicadorMovimento18.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento19);
        indicadorMovimento19.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento20);
        indicadorMovimento20.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento21);
        indicadorMovimento21.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento22);
        indicadorMovimento22.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento23);
        indicadorMovimento23.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento24);
        indicadorMovimento24.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento25);
        indicadorMovimento25.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento26);
        indicadorMovimento26.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento27);
        indicadorMovimento27.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento28);
        indicadorMovimento28.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento29);
        indicadorMovimento29.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento30);
        indicadorMovimento30.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento31);
        indicadorMovimento31.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento32);
        indicadorMovimento32.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento33);
        indicadorMovimento33.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento34);
        indicadorMovimento34.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorMovimento35);
        indicadorMovimento35.setBounds(180, 0, 0, 0);
        interfaceJogo.add(indicadorSelecionado);
        indicadorSelecionado.setBounds(110, 0, 0, 0);

        texto.setBackground(new java.awt.Color(255, 255, 255));
        texto.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        texto.setForeground(new java.awt.Color(255, 255, 255));
        interfaceJogo.add(texto);
        texto.setBounds(64, 0, 520, 60);

        tabuleiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/tabuleiros/tabuleiroMadeira.png"))); // NOI18N
        tabuleiro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabuleiroMousePressed(evt);
            }
        });
        interfaceJogo.add(tabuleiro);
        tabuleiro.setBounds(0, 0, 650, 650);

        tela.add(interfaceJogo);
        interfaceJogo.setBounds(0, 0, 0, 0);

        editar.setText("Editar");

        tabuleiros.setText("Tabuleiro");

        tabuleiroMadeira.setSelected(true);
        tabuleiroMadeira.setText("Madeira");
        tabuleiroMadeira.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabuleiroMadeiraActionPerformed(evt);
            }
        });
        tabuleiros.add(tabuleiroMadeira);

        tabuleiroVerdeBranco.setText("Verde com branco");
        tabuleiroVerdeBranco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabuleiroVerdeBrancoActionPerformed(evt);
            }
        });
        tabuleiros.add(tabuleiroVerdeBranco);

        tabuleiroPedra.setText("Pedra");
        tabuleiroPedra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabuleiroPedraActionPerformed(evt);
            }
        });
        tabuleiros.add(tabuleiroPedra);

        editar.add(tabuleiros);

        pecas.setText("Pecas");

        pecasPadrao.setSelected(true);
        pecasPadrao.setText("Cor solida");
        pecasPadrao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pecasPadraoActionPerformed(evt);
            }
        });
        pecas.add(pecasPadrao);

        pecasLudico.setText("Ludico");
        pecasLudico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pecasLudicoActionPerformed(evt);
            }
        });
        pecas.add(pecasLudico);

        pecasLudicoII.setText("Ludico II");
        pecasLudicoII.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pecasLudicoIIActionPerformed(evt);
            }
        });
        pecas.add(pecasLudicoII);

        pecasVidro.setText("Vidro");
        pecasVidro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pecasVidroActionPerformed(evt);
            }
        });
        pecas.add(pecasVidro);

        editar.add(pecas);

        jMenuBar1.add(editar);

        partida.setText("Partida");

        reiniciar.setText("Reiniciar");
        reiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reiniciarActionPerformed(evt);
            }
        });
        partida.add(reiniciar);

        abandonar.setText("Abandonar");
        abandonar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abandonarActionPerformed(evt);
            }
        });
        partida.add(abandonar);

        jMenuBar1.add(partida);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tela, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 78, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tela, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private AudioClip somMovimento = Applet.newAudioClip(Xadrez.class.getResource("/soundFX/somMovimento.wav"));
    private AudioClip somAtaque = Applet.newAudioClip(Xadrez.class.getResource("/soundFX/somAtaque.wav"));
    private RegrasJogo jogo = new RegrasJogo();
    private String estiloPecas = "pecasCorUnica";
    private char pecaAtual;
    private Adversario bot;
    private boolean modoPvC = false;
    private int[] x = {-1,-1};
    private int[] y = {-1,-1};
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        partida.setVisible(false);
        inicializarArrays();
        desenharPecas();
    }//GEN-LAST:event_formWindowOpened

    private void tabuleiroMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabuleiroMousePressed
        if(jogo.getFimDeJogo() != -1 || jogo.getPeaoPromovido()[0] != -1)
            return;
        if(x[0] == -1) {
            x[0] = evt.getX()/65-1;
            y[0] = evt.getY()/65-1;
            if(modoPvC && jogo.getTabuleiro()[y[0]][x[0]] < 97) {
                x[0] = -1;
                y[0] = -1;
                return;
            }
            if(x[0] > 7 || x[0] < 0 || y[0] > 7 || y[0] < 0 || jogo.getTabuleiro()[y[0]][x[0]] == ' ') {
                x[0] = -1;
                y[0] = -1;
                texto.setText("");
                apagarMovimento();
                return;
            }
            if(!jogo.getVez() && jogo.getTabuleiro()[y[0]][x[0]] < 97) {
                texto.setText("Vez das peças brancas");
                x[0] = -1;
                y[0] = -1;
                apagarMovimento();
            }else if(jogo.getVez() && jogo.getTabuleiro()[y[0]][x[0]] > 90){
                texto.setText("Vez das peças pretas");
                x[0] = -1;
                y[0] = -1;
                apagarMovimento();
            }else{
                texto.setText("");
                indicadorSelecionado.setIcon(carregarImagem('s', "indicadores"));
                indicadorSelecionado.setBounds((x[0]+1)*65, (y[0]+1)*65, 65, 65);
                indicadorSelecionado.setVisible(true);
                int[] peca = {y[0], x[0]};
                desenharMovimento(peca);
            }
        }else{
            indicadorSelecionado.setVisible(false);
            x[1] = evt.getX()/65-1;
            y[1] = evt.getY()/65-1;
            if(x[1] > 7 || x[1] < 0 || y[1] > 7 || y[1] < 0) {
                x[0] = -1;
                y[0] = -1;
                x[1] = -1;
                y[1] = -1;
                apagarMovimento();
                return;
            }else if(jogo.getTabuleiro()[y[1]][x[1]] > 90 && jogo.getTabuleiro()[y[0]][x[0]] > 90) {
                x[0] = x[1];
                y[0] = y[1];
                indicadorSelecionado.setBounds((x[0]+1)*65, (y[0]+1)*65, 65, 65);
                indicadorSelecionado.setVisible(true);
                int[] peca = {y[0], x[0]};
                apagarMovimento();
                desenharMovimento(peca);
                return;
            }else if(jogo.getTabuleiro()[y[1]][x[1]] < 97 && jogo.getTabuleiro()[y[0]][x[0]] < 97 && jogo.getTabuleiro()[y[1]][x[1]] != ' ') {
                x[0] = x[1];
                y[0] = y[1];
                indicadorSelecionado.setBounds((x[0]+1)*65, (y[0]+1)*65, 65, 65);
                indicadorSelecionado.setVisible(true);
                int[] peca = {y[0], x[0]};
                apagarMovimento();
                desenharMovimento(peca);
                return;
            }else {
                int[] peca = {y[0], x[0]};
                int[] movimento = {y[1] - peca[0], x[1] - peca[1]};
                int[] resultante = {peca[0] + movimento[0], peca[1] + movimento[1]};
                boolean ataque = jogo.getTabuleiro()[peca[0] + movimento[0]][peca[1] + movimento[1]] != ' ';
                pecaAtual = jogo.getTabuleiro()[peca[0]][peca[1]];
                
                if(jogo.movimentarPeca(peca,movimento) == -1) {
                    texto.setText("Movimento Inválido");
                }else {
                    if(!((resultante[0] == 0 || resultante[0] == 7) && (pecaAtual == 'p' || pecaAtual == 'P'))) {
                        if(ataque)
                            somAtaque.play();
                        else
                           somMovimento.play();
                    }
                    if(modoPvC && jogo.getPeaoPromovido()[0] == -1){
                        apagarMovimento();
                        desenharPecas();
                        bot.jogar();
                        if(jogo.getPeaoPromovido()[0] != -1)
                            jogo.promocao(1);
                    }
                }
                anunciarFimDeJogo();
                
                if(jogo.getPeaoPromovido()[0] != -1) {
                    desenharMenuPromocao(resultante, jogo.getTabuleiro()[peca[0]][peca[1]]);
                }else {
                    apagarMovimento();
                    desenharPecas();
                    x[0] = -1;
                    y[0] = -1;
                }
                x[1] = -1;
                y[1] = -1;
                
            }
        }
    }//GEN-LAST:event_tabuleiroMousePressed

    private void tabuleiroMadeiraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabuleiroMadeiraActionPerformed
        tabuleiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/tabuleiros/tabuleiroMadeira.png")));
        tabuleiroVerdeBranco.setSelected(false);
        tabuleiroPedra.setSelected(false);
    }//GEN-LAST:event_tabuleiroMadeiraActionPerformed

    private void tabuleiroVerdeBrancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabuleiroVerdeBrancoActionPerformed
        tabuleiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/tabuleiros/Tabuleiro Verde-Branco.png")));
        tabuleiroMadeira.setSelected(false);
        tabuleiroPedra.setSelected(false);
    }//GEN-LAST:event_tabuleiroVerdeBrancoActionPerformed

    private void pecasPadraoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pecasPadraoActionPerformed
       estiloPecas = "pecasCorUnica";
       desenharPecas();
       pecasLudico.setSelected(false);
       pecasLudicoII.setSelected(false);
       pecasVidro.setSelected(false);
       if(jogo.getPeaoPromovido()[0] != -1)
            desenharMenuPromocao();
    }//GEN-LAST:event_pecasPadraoActionPerformed

    private void pecasLudicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pecasLudicoActionPerformed
        estiloPecas = "pecasLudicos";
        desenharPecas();
        pecasPadrao.setSelected(false);
        pecasLudicoII.setSelected(false);
        pecasVidro.setSelected(false);
        if(jogo.getPeaoPromovido()[0] != -1)
            desenharMenuPromocao();
    }//GEN-LAST:event_pecasLudicoActionPerformed

    private void pecasLudicoIIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pecasLudicoIIActionPerformed
        estiloPecas = "pecasLudicos2";
        desenharPecas();
        pecasLudico.setSelected(false);
        pecasPadrao.setSelected(false);
        pecasVidro.setSelected(false);
        if(jogo.getPeaoPromovido()[0] != -1)
            desenharMenuPromocao();
    }//GEN-LAST:event_pecasLudicoIIActionPerformed

    private void pecasVidroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pecasVidroActionPerformed
        estiloPecas = "pecasVidro";
        desenharPecas();
        pecasLudico.setSelected(false);
        pecasLudicoII.setSelected(false);
        pecasPadrao.setSelected(false);
        if(jogo.getPeaoPromovido()[0] != -1)
            desenharMenuPromocao();
    }//GEN-LAST:event_pecasVidroActionPerformed

    private void cavaloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cavaloActionPerformed
        menuPromocao.setVisible(false);
        if(jogo.getTabuleiro()[jogo.getPeaoPromovido()[0]][jogo.getPeaoPromovido()[1]] != ' ')
            somAtaque.play();
        else
            somMovimento.play();
        jogo.promocao(2);
        x[0] = -1;
        y[0] = -1;
        desenharPecas();
        apagarMovimento();
        if(modoPvC && jogo.getFimDeJogo() == -1){
            bot.jogar();
            if(jogo.getPeaoPromovido()[0] != -1)
                jogo.promocao(1);
            somMovimento.play();
            desenharPecas();
        }else{
            desenharPecas();
            anunciarFimDeJogo();
        }
    }//GEN-LAST:event_cavaloActionPerformed

    private void torreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_torreActionPerformed
        menuPromocao.setVisible(false);
        
        if(jogo.getTabuleiro()[jogo.getPeaoPromovido()[0]][jogo.getPeaoPromovido()[1]] != ' ')
            somAtaque.play();
        else
            somMovimento.play();
        
        jogo.promocao(3);
        x[0] = -1;
        y[0] = -1;
        desenharPecas();
        apagarMovimento();
        if(modoPvC && jogo.getFimDeJogo() == -1){
            bot.jogar();
            if(jogo.getPeaoPromovido()[0] != -1)
                jogo.promocao(1);
            somMovimento.play();
            desenharPecas();
        }else{
            desenharPecas();
            anunciarFimDeJogo();
        }
    }//GEN-LAST:event_torreActionPerformed

    private void rainhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rainhaActionPerformed
        menuPromocao.setVisible(false);
        if(jogo.getTabuleiro()[jogo.getPeaoPromovido()[0]][jogo.getPeaoPromovido()[1]] != ' ')
            somAtaque.play();
        else
            somMovimento.play();
        
        jogo.promocao(1);
        x[0] = -1;
        y[0] = -1;
        desenharPecas();
        apagarMovimento();
        if(modoPvC && jogo.getFimDeJogo() == -1){
            bot.jogar();
            if(jogo.getPeaoPromovido()[0] != -1)
                jogo.promocao(1);
            somMovimento.play();
            desenharPecas();
        }else{
            desenharPecas();
            anunciarFimDeJogo();
        }
    }//GEN-LAST:event_rainhaActionPerformed

    private void pvpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pvpButtonActionPerformed
        menu.setVisible(false);
        modoPvC = false;
        interfaceJogo.setVisible(true);
        interfaceJogo.setBounds(0, 0, 650, 650);
        partida.setVisible(true);
    }//GEN-LAST:event_pvpButtonActionPerformed

    private void abandonarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abandonarActionPerformed
        menu.setVisible(true);
        partida.setVisible(false);
        texto.setText("");
        interfaceJogo.setVisible(false);
        jogo = new RegrasJogo();
        desenharPecas();
    }//GEN-LAST:event_abandonarActionPerformed

    private void reiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reiniciarActionPerformed
        texto.setText("");
        menuPromocao.setVisible(false);
        jogo = new RegrasJogo();
        if(modoPvC)
            bot = new Adversario(jogo);
        x[0] = -1;
        y[0] = -1;
        apagarMovimento();
        desenharPecas();
    }//GEN-LAST:event_reiniciarActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        menuPromocao.setVisible(false);
        jogo.promocao(0);
    }//GEN-LAST:event_cancelarActionPerformed

    private void bispoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bispoActionPerformed
        menuPromocao.setVisible(false);
        if(jogo.getTabuleiro()[jogo.getPeaoPromovido()[0]][jogo.getPeaoPromovido()[1]] != ' ')
            somAtaque.play();
        else
            somMovimento.play();
        
        jogo.promocao(4);
        x[0] = -1;
        y[0] = -1;
        desenharPecas();
        apagarMovimento();
        if(modoPvC && jogo.getFimDeJogo() == -1){
            bot.jogar();
            if(jogo.getPeaoPromovido()[0] != -1)
                jogo.promocao(1);
            somMovimento.play();
            desenharPecas();
        }else{
            desenharPecas();
            anunciarFimDeJogo();
        }
    }//GEN-LAST:event_bispoActionPerformed

    private void pvcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pvcButtonActionPerformed
        bot = new Adversario(jogo);
        modoPvC = true;
        menu.setVisible(false);
        interfaceJogo.setVisible(true);
        interfaceJogo.setBounds(0, 0, 650, 650);
        partida.setVisible(true);
    }//GEN-LAST:event_pvcButtonActionPerformed

    private void tabuleiroPedraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabuleiroPedraActionPerformed
        tabuleiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/tabuleiros/tabuleiroPedra.png")));
        tabuleiroMadeira.setSelected(false);
        tabuleiroVerdeBranco.setSelected(false);
    }//GEN-LAST:event_tabuleiroPedraActionPerformed

    private void desenharPecas() {
        // apagando diagrama antigo
        for(int i=0; i< 16; i++) {
            pecasBrancas[i].setVisible(false);
            pecasPretas[i].setVisible(false);
        }
        
        // desenhando novo diagrama
        String peca;
        char[][] tabuleiro;
        tabuleiro = jogo.getTabuleiro();
        int contadorBrancas = 0;
        int contadorPretas = 0;
        
        for(int i=0; i<8; i++) {
            for(int j=0; j<8; j++) {
                if(tabuleiro[i][j] > 90) {
                    pecasBrancas[contadorBrancas].setBounds(j*65+65, i*65+65, 65, 65);
                    pecasBrancas[contadorBrancas].setIcon(carregarImagem(tabuleiro[i][j], estiloPecas));
                    pecasBrancas[contadorBrancas].setVisible(true);
                    contadorBrancas++;
                }else if(tabuleiro[i][j] < 97 && tabuleiro[i][j] != ' ') {
                    pecasPretas[contadorPretas].setBounds(j*65+65, i*65+65, 65, 65);
                    pecasPretas[contadorPretas].setIcon(carregarImagem(tabuleiro[i][j], estiloPecas));
                    pecasPretas[contadorPretas].setVisible(true);
                    contadorPretas++;
                }
            }
        }
    }
    private void desenharMenuPromocao() {
        if(pecaAtual > 90) {
            rainha.setIcon(carregarImagem('a', estiloPecas));
            cavalo.setIcon(carregarImagem('c', estiloPecas));
            torre.setIcon(carregarImagem('t', estiloPecas));
            bispo.setIcon(carregarImagem('b', estiloPecas));
        }else {
            rainha.setIcon(carregarImagem('A', estiloPecas));
            cavalo.setIcon(carregarImagem('C', estiloPecas));
            torre.setIcon(carregarImagem('T', estiloPecas));
            bispo.setIcon(carregarImagem('B', estiloPecas));
        }
    }
    
    private void desenharMenuPromocao(int[] resultante, char peca) {
        if(peca > 90) {
            rainha.setIcon(carregarImagem('a', estiloPecas));
            cavalo.setIcon(carregarImagem('c', estiloPecas));
            torre.setIcon(carregarImagem('t', estiloPecas));
            bispo.setIcon(carregarImagem('b', estiloPecas));
            menuPromocao.setVisible(true);
            menuPromocao.setBounds(resultante[1]*65+65, resultante[0]*65+65, 65, 280);
        }else {
            rainha.setIcon(carregarImagem('A', estiloPecas));
            cavalo.setIcon(carregarImagem('C', estiloPecas));
            torre.setIcon(carregarImagem('T', estiloPecas));
            bispo.setIcon(carregarImagem('B', estiloPecas));
            menuPromocao.setVisible(true);
            menuPromocao.setBounds(resultante[1]*65+65, resultante[0]*65+65-280, 65, 280);
        }
    }
    private void desenharMovimento(int[] peca) {
        if(!jogo.getVez() && jogo.getTabuleiro()[peca[0]][peca[1]] < 97)
            return;
        else if(jogo.getVez() && jogo.getTabuleiro()[peca[0]][peca[1]] > 90)
            return;
        else if(jogo.getTabuleiro()[peca[0]][peca[1]] == ' ')
            return;
        
        int[] movimento = new int[2];
        int[] resultante = new int[2];
        int contagemMovimento = 0;
         for(int i=0; i<8; i++) {
            for(int j=0; j<8; j++) {
                movimento[0] = i - peca[0];
                movimento[1] = j - peca[1];
                if(jogo.movimentoPermitido(peca, movimento, false)) {
                    resultante[0] = peca[0] + movimento[0];
                    resultante[1] = peca[1] + movimento[1];
                    if(jogo.getTabuleiro()[resultante[0]][resultante[1]] == ' ') {
                        movimentos[contagemMovimento].setBounds(j*65+65, i*65+65, 65, 65);
                        movimentos[contagemMovimento].setIcon(carregarImagem('m', "Indicadores"));
                    }else  {
                        movimentos[contagemMovimento].setBounds(j*65+65, i*65+65, 65, 65);
                        movimentos[contagemMovimento].setIcon(carregarImagem('k', "Indicadores"));
                    }
                    movimentos[contagemMovimento].setVisible(true);
                    contagemMovimento++;
                }
            }
        }
    }
    
    private void apagarMovimento() {
        for(int i=0; i<35; i++) {
            movimentos[i].setVisible(false);
        }
    }
    
    private void anunciarFimDeJogo() {
        switch(jogo.getFimDeJogo()) {
            case 0:
                texto.setText("Vitória das peças brancas");
                break;
            case 1:
                texto.setText("Vitória das peças pretas");
                break;
            case 2:
                texto.setText("Empate por afogamento");
                break;
            case 3:
                texto.setText("Empate por tripla repetição");
                break;
            case 4:
                texto.setText("Empate por insuficiência de recursos");
                break;
            case 5:
                texto.setText("Empate por 50 lançes");
                break;
            case 6:
                texto.setText("Empate por comum acordo");
                break;
        }
    }
    
    private javax.swing.ImageIcon carregarImagem(char peca, String estilo) {
        switch(peca) {
            case 'p':
                return new javax.swing.ImageIcon(getClass().getResource("/imagens/"+estilo+"/peaoBranco.png"));
            case 't':
                return new javax.swing.ImageIcon(getClass().getResource("/imagens/"+estilo+"/torreBranca.png"));
            case 'c':
                return new javax.swing.ImageIcon(getClass().getResource("/imagens/"+estilo+"/cavaloBranco.png"));
            case 'b':
                return new javax.swing.ImageIcon(getClass().getResource("/imagens/"+estilo+"/bispoBranco.png"));
            case 'a':
                return new javax.swing.ImageIcon(getClass().getResource("/imagens/"+estilo+"/rainhaBranca.png"));
            case 'r':
                return new javax.swing.ImageIcon(getClass().getResource("/imagens/"+estilo+"/reiBranco.png"));
            case 'P':
                return new javax.swing.ImageIcon(getClass().getResource("/imagens/"+estilo+"/peaoPreto.png"));
            case 'T':
                return new javax.swing.ImageIcon(getClass().getResource("/imagens/"+estilo+"/torrePreta.png"));
            case 'C':
                return new javax.swing.ImageIcon(getClass().getResource("/imagens/"+estilo+"/cavaloPreto.png"));
            case 'B':
                return new javax.swing.ImageIcon(getClass().getResource("/imagens/"+estilo+"/bispoPreto.png"));
            case 'A':
                return new javax.swing.ImageIcon(getClass().getResource("/imagens/"+estilo+"/rainhaPreta.png"));
            case 'R':
                return new javax.swing.ImageIcon(getClass().getResource("/imagens/"+estilo+"/reiPreto.png"));
            case 's':
                return new javax.swing.ImageIcon(getClass().getResource("/imagens/"+estilo+"/selecionado.png"));
            case 'm':
                return new javax.swing.ImageIcon(getClass().getResource("/imagens/"+estilo+"/movimento.png"));
            case 'k':
                return new javax.swing.ImageIcon(getClass().getResource("/imagens/"+estilo+"/ataque.png"));
        }
        
        return null;
    }
    
    private void inicializarArrays() {
        pecasBrancas[0] = pecaBranca1;pecasBrancas[1] = pecaBranca2;
        pecasBrancas[2] = pecaBranca3;pecasBrancas[3] = pecaBranca4;
        pecasBrancas[4] = pecaBranca5;pecasBrancas[5] = pecaBranca6;
        pecasBrancas[6] = pecaBranca7;pecasBrancas[7] = pecaBranca8;
        pecasBrancas[8] = pecaBranca9;pecasBrancas[9] = pecaBranca10;
        pecasBrancas[10] = pecaBranca11;pecasBrancas[11] = pecaBranca12;
        pecasBrancas[12] = pecaBranca13;pecasBrancas[13] = pecaBranca14;
        pecasBrancas[14] = pecaBranca15;pecasBrancas[15] = pecaBranca16;
        
        pecasPretas[0] = pecaPreta1;pecasPretas[1] = pecaPreta2;
        pecasPretas[2] = pecaPreta3;pecasPretas[3] = pecaPreta4;
        pecasPretas[4] = pecaPreta5;pecasPretas[5] = pecaPreta6;
        pecasPretas[6] = pecaPreta7;pecasPretas[7] = pecaPreta8;
        pecasPretas[8] = pecaPreta9;pecasPretas[9] = pecaPreta10;
        pecasPretas[10] = pecaPreta11;pecasPretas[11] = pecaPreta12;
        pecasPretas[12] = pecaPreta13;pecasPretas[13] = pecaPreta14;
        pecasPretas[14] = pecaPreta15;pecasPretas[15] = pecaPreta16;
        
        movimentos[0] = indicadorMovimento1;movimentos[1] = indicadorMovimento2;
        movimentos[2] = indicadorMovimento3;movimentos[3] = indicadorMovimento4;
        movimentos[4] = indicadorMovimento5;movimentos[5] = indicadorMovimento6;
        movimentos[6] = indicadorMovimento7;movimentos[7] = indicadorMovimento8;
        movimentos[8] = indicadorMovimento9;movimentos[9] = indicadorMovimento10;
        movimentos[10] = indicadorMovimento11;movimentos[11] = indicadorMovimento12;
        movimentos[12] = indicadorMovimento13;movimentos[13] = indicadorMovimento14;
        movimentos[14] = indicadorMovimento15;movimentos[15] = indicadorMovimento16;
        movimentos[16] = indicadorMovimento17;movimentos[17] = indicadorMovimento18;
        movimentos[18] = indicadorMovimento19;movimentos[19] = indicadorMovimento20;
        movimentos[20] = indicadorMovimento21;movimentos[21] = indicadorMovimento22;
        movimentos[22] = indicadorMovimento23;movimentos[23] = indicadorMovimento24;
        movimentos[24] = indicadorMovimento25;movimentos[25] = indicadorMovimento26;
        movimentos[26] = indicadorMovimento27;movimentos[27] = indicadorMovimento28;
        movimentos[28] = indicadorMovimento29;movimentos[29] = indicadorMovimento30;
        movimentos[30] = indicadorMovimento31;movimentos[31] = indicadorMovimento32;
        movimentos[32] = indicadorMovimento33;movimentos[33] = indicadorMovimento34;
        movimentos[34] = indicadorMovimento35;
        

    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Xadrez.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Xadrez.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Xadrez.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Xadrez.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Xadrez().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem abandonar;
    private javax.swing.JButton bispo;
    private javax.swing.JButton cancelar;
    private javax.swing.JButton cavalo;
    private javax.swing.JMenu editar;
    private javax.swing.JLabel indicadorMovimento1;
    private javax.swing.JLabel indicadorMovimento10;
    private javax.swing.JLabel indicadorMovimento11;
    private javax.swing.JLabel indicadorMovimento12;
    private javax.swing.JLabel indicadorMovimento13;
    private javax.swing.JLabel indicadorMovimento14;
    private javax.swing.JLabel indicadorMovimento15;
    private javax.swing.JLabel indicadorMovimento16;
    private javax.swing.JLabel indicadorMovimento17;
    private javax.swing.JLabel indicadorMovimento18;
    private javax.swing.JLabel indicadorMovimento19;
    private javax.swing.JLabel indicadorMovimento2;
    private javax.swing.JLabel indicadorMovimento20;
    private javax.swing.JLabel indicadorMovimento21;
    private javax.swing.JLabel indicadorMovimento22;
    private javax.swing.JLabel indicadorMovimento23;
    private javax.swing.JLabel indicadorMovimento24;
    private javax.swing.JLabel indicadorMovimento25;
    private javax.swing.JLabel indicadorMovimento26;
    private javax.swing.JLabel indicadorMovimento27;
    private javax.swing.JLabel indicadorMovimento28;
    private javax.swing.JLabel indicadorMovimento29;
    private javax.swing.JLabel indicadorMovimento3;
    private javax.swing.JLabel indicadorMovimento30;
    private javax.swing.JLabel indicadorMovimento31;
    private javax.swing.JLabel indicadorMovimento32;
    private javax.swing.JLabel indicadorMovimento33;
    private javax.swing.JLabel indicadorMovimento34;
    private javax.swing.JLabel indicadorMovimento35;
    private javax.swing.JLabel indicadorMovimento4;
    private javax.swing.JLabel indicadorMovimento5;
    private javax.swing.JLabel indicadorMovimento6;
    private javax.swing.JLabel indicadorMovimento7;
    private javax.swing.JLabel indicadorMovimento8;
    private javax.swing.JLabel indicadorMovimento9;
    private javax.swing.JLabel indicadorSelecionado;
    private javax.swing.JLayeredPane interfaceJogo;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLayeredPane menu;
    private javax.swing.JLabel menuImagem;
    private javax.swing.JLayeredPane menuPromocao;
    private javax.swing.JMenu partida;
    private javax.swing.JLabel pecaBranca1;
    private javax.swing.JLabel pecaBranca10;
    private javax.swing.JLabel pecaBranca11;
    private javax.swing.JLabel pecaBranca12;
    private javax.swing.JLabel pecaBranca13;
    private javax.swing.JLabel pecaBranca14;
    private javax.swing.JLabel pecaBranca15;
    private javax.swing.JLabel pecaBranca16;
    private javax.swing.JLabel pecaBranca2;
    private javax.swing.JLabel pecaBranca3;
    private javax.swing.JLabel pecaBranca4;
    private javax.swing.JLabel pecaBranca5;
    private javax.swing.JLabel pecaBranca6;
    private javax.swing.JLabel pecaBranca7;
    private javax.swing.JLabel pecaBranca8;
    private javax.swing.JLabel pecaBranca9;
    private javax.swing.JLabel pecaPreta1;
    private javax.swing.JLabel pecaPreta10;
    private javax.swing.JLabel pecaPreta11;
    private javax.swing.JLabel pecaPreta12;
    private javax.swing.JLabel pecaPreta13;
    private javax.swing.JLabel pecaPreta14;
    private javax.swing.JLabel pecaPreta15;
    private javax.swing.JLabel pecaPreta16;
    private javax.swing.JLabel pecaPreta2;
    private javax.swing.JLabel pecaPreta3;
    private javax.swing.JLabel pecaPreta4;
    private javax.swing.JLabel pecaPreta5;
    private javax.swing.JLabel pecaPreta6;
    private javax.swing.JLabel pecaPreta7;
    private javax.swing.JLabel pecaPreta8;
    private javax.swing.JLabel pecaPreta9;
    private javax.swing.JMenu pecas;
    private javax.swing.JCheckBoxMenuItem pecasLudico;
    private javax.swing.JCheckBoxMenuItem pecasLudicoII;
    private javax.swing.JCheckBoxMenuItem pecasPadrao;
    private javax.swing.JCheckBoxMenuItem pecasVidro;
    private javax.swing.JButton pvcButton;
    private javax.swing.JButton pvpButton;
    private javax.swing.JButton rainha;
    private javax.swing.JMenuItem reiniciar;
    private javax.swing.JLabel tabuleiro;
    private javax.swing.JCheckBoxMenuItem tabuleiroMadeira;
    private javax.swing.JCheckBoxMenuItem tabuleiroPedra;
    private javax.swing.JCheckBoxMenuItem tabuleiroVerdeBranco;
    private javax.swing.JMenu tabuleiros;
    private javax.swing.JLayeredPane tela;
    private javax.swing.JLabel texto;
    private javax.swing.JButton torre;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JLabel[] pecasBrancas = new javax.swing.JLabel[16];
    private javax.swing.JLabel[] pecasPretas = new javax.swing.JLabel[16];
    private javax.swing.JLabel[] movimentos = new javax.swing.JLabel[35];
    
}

